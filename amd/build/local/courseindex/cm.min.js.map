{"version":3,"file":"cm.min.js","sources":["../../../src/local/courseindex/cm.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index cm component.\n *\n * This component is used to control specific course modules interactions like drag and drop.\n *\n * @module     format_compass/local/courseindex/cm\n * @class      format_compass/local/courseindex/cm\n * @copyright  2023 KnowledgeOne\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Component from 'core_courseformat/local/courseindex/cm';\nimport Prefetch from 'core/prefetch';\nimport Config from 'core/config';\n\n// Prefetch the completion icons template.\nconst completionTemplate = 'core_courseformat/local/courseindex/cmcompletion';\nPrefetch.prefetchTemplate(completionTemplate);\n\nexport default class compassComponent extends Component {\n\n    /**\n     * Static method to create a component instance form the mustache template.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {compassComponent}\n     */\n    static init(target, selectors) {\n        return new compassComponent({\n            element: document.getElementById(target),\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the course state.\n     */\n    stateReady(state) {\n        this.configDragDrop(this.id);\n        const cm = state.cm.get(this.id);\n        const course = state.course;\n        // Refresh completion icon.\n        this._refreshCompletion({\n            state,\n            element: cm,\n        });\n        const url = new URL(window.location.href);\n        const anchor = url.hash.replace('#', '');\n        // Check if the current url is the cm url.\n        if (window.location.href == cm.url\n            || (window.location.href.includes(course.baseurl) && anchor == cm.anchor)\n        ) {\n            this.reactive.dispatch('setPageItem', 'cm', this.id);\n            this.element.scrollIntoView({block: \"center\"});\n        }\n        // Check if this we are displaying this activity page.\n        if (Config.contextid != Config.courscompasstextId && Config.contextInstanceId == this.id) {\n            this.reactive.dispatch('setPageItem', 'cm', this.id, true);\n            this.element.scrollIntoView({block: \"center\"});\n        }\n        // Add anchor logic if the element is not user visible.\n        if (!cm.uservisible) {\n            this.addEventListener(\n                this.getElement(this.selectors.CM_NAME),\n                'click',\n                this._activityAnchor,\n            );\n        }\n        //Display sectiondivider while keeping labels hidden\n        if(cm.module == 'sectiondivider') {\n            this.element.classList.remove('d-flex-noedit');\n            this.element.classList.add('d-flex');\n        } else {\n            this.element.classList.add('not-divider');\n        }\n    }\n}\n"],"names":["prefetchTemplate","compassComponent","Component","target","selectors","element","document","getElementById","stateReady","state","configDragDrop","this","id","cm","get","course","_refreshCompletion","anchor","URL","window","location","href","hash","replace","url","includes","baseurl","reactive","dispatch","scrollIntoView","block","Config","contextid","courscompasstextId","contextInstanceId","uservisible","addEventListener","getElement","CM_NAME","_activityAnchor","module","classList","remove","add"],"mappings":";;;;;;;;;;2NAgCSA,iBADkB,0DAGNC,yBAAyBC,wBAS9BC,OAAQC,kBACT,IAAIH,iBAAiB,CACxBI,QAASC,SAASC,eAAeJ,QACjCC,UAAAA,YASRI,WAAWC,YACFC,eAAeC,KAAKC,UACnBC,GAAKJ,MAAMI,GAAGC,IAAIH,KAAKC,IACvBG,OAASN,MAAMM,YAEhBC,mBAAmB,CACpBP,MAAAA,MACAJ,QAASQ,WAGPI,OADM,IAAIC,IAAIC,OAAOC,SAASC,MACjBC,KAAKC,QAAQ,IAAK,KAEjCJ,OAAOC,SAASC,MAAQR,GAAGW,KACvBL,OAAOC,SAASC,KAAKI,SAASV,OAAOW,UAAYT,QAAUJ,GAAGI,eAE7DU,SAASC,SAAS,cAAe,KAAMjB,KAAKC,SAC5CP,QAAQwB,eAAe,CAACC,MAAO,YAGpCC,gBAAOC,WAAaD,gBAAOE,oBAAsBF,gBAAOG,mBAAqBvB,KAAKC,UAC7Ee,SAASC,SAAS,cAAe,KAAMjB,KAAKC,IAAI,QAChDP,QAAQwB,eAAe,CAACC,MAAO,YAGnCjB,GAAGsB,kBACCC,iBACDzB,KAAK0B,WAAW1B,KAAKP,UAAUkC,SAC/B,QACA3B,KAAK4B,iBAIG,kBAAb1B,GAAG2B,aACGnC,QAAQoC,UAAUC,OAAO,sBACzBrC,QAAQoC,UAAUE,IAAI,gBAEtBtC,QAAQoC,UAAUE,IAAI"}