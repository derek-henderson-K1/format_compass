{"version":3,"file":"placeholder.min.js","sources":["../../../src/local/courseindex/placeholder.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index placeholder replacer.\n *\n * @module     format_compass/local/courseindex/placeholder\n * @class      core_courseformat/local/courseindex/placeholder\n * @copyright 2023 Knowledgeone inc. <https://knowledgeone.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport Templates from 'core/templates';\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\nimport Pending from 'core/pending';\nimport {get_strings as getStrings} from 'core/str';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Static method to create a component instance form the mustache template.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: getCurrentCourseEditor(),\n            selectors,\n        });\n    }\n\n    /**\n     * Component creation hook.\n     */\n    create() {\n        // Add a pending operation waiting for the initial content.\n        this.pendingContent = new Pending(`core_courseformat/placeholder:loadcourseindex`);\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * This stateReady to be async because it loads the real courseindex.\n     *\n     * @param {object} state the initial state\n     */\n    async stateReady(state) {\n\n        // Check if we have a static course index already loded from a previous page.\n        if (!this.loadStaticContent()) {\n            await this.loadTemplateContent(state);\n        }\n    }\n\n    /**\n     * Load the course index from the session storage if any.\n     *\n     * @return {boolean} true if the static version is loaded form the session\n     */\n    loadStaticContent() {\n        // Load the previous static course index from the session cache.\n        const index = this.reactive.getStorageValue(`courseIndex`);\n        if (index.html && index.js) {\n            Templates.replaceNode(this.element, index.html, index.js);\n            this.pendingContent.resolve();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Load the course index template.\n     *\n     * @param {Object} state the initial state\n     */\n    async loadTemplateContent(state) {\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(state);\n        const course_format_options = state.course_format_options;\n\n        // Labels for course format options\n        const labels = [\n            {\n                key: 'firsttabname',\n                component: 'format_compass'\n            },\n            {\n                key: course_format_options.labelforlessonscutoff,\n                component: 'format_compass'\n            },\n            {\n                key: course_format_options.labelforassessmentscutoff,\n                component: 'format_compass'\n            }\n        ];\n\n        getStrings(labels, 'format_compass').then(function (results) {\n            data.homeLabel = results[0]; //Home\n            data.lessonsLabel = results[1]; //Lessons\n            data.assessmentsLabel = results[2]; //Assessments\n        });\n\n        data.hasassessments = course_format_options.hasassessments;\n        data.cutoff = course_format_options.assessmentscutoff;\n\n        //Cutoff cannot be 0\n        if(data.cutoff == \"0\") {\n            data.cutoff = data.sections.length;\n        }\n\n        data.coursehome = new Object();\n        data.assessments = new Array();\n\n        // Split sections into objects to make the Assessments cut-off\n        for(var i = data.sections.length -1; i > -1; i--) {\n            if (data.sections[i].number >= data.cutoff) {\n                data.sections[i].type = \"assessment\";\n                //Only if assessments are enabled\n                if(course_format_options.hasassessments) {\n                    data.assessments.push(data.sections[i]);\n                    data.sections.splice(i, 1);\n                }\n            } else {\n                data.sections[i].type = \"lesson\";\n            }\n        }\n        data.assessments.reverse();\n\n        // Isolate course home\n        data.coursehome = data.sections[0];\n        data.sections.splice(0, 1);\n\n        try {\n            // To render an HTML into our component we just use the regular Templates module.\n            const {html, js} = await Templates.renderForPromise(\n                'format_compass/local/courseindex/courseindex',\n                data,\n            );\n            Templates.replaceNode(this.element, html, js);\n            this.pendingContent.resolve();\n\n            // Save the rendered template into the session cache.\n            this.reactive.setStorageValue(`courseIndex`, {html, js});\n        } catch (error) {\n            this.pendingContent.resolve(error);\n            throw error;\n        }\n    }\n}\n"],"names":["Component","BaseComponent","target","selectors","element","document","getElementById","reactive","create","pendingContent","Pending","state","this","loadStaticContent","loadTemplateContent","index","getStorageValue","html","js","replaceNode","resolve","data","getExporter","course","course_format_options","labels","key","component","labelforlessonscutoff","labelforassessmentscutoff","then","results","homeLabel","lessonsLabel","assessmentsLabel","hasassessments","cutoff","assessmentscutoff","sections","length","coursehome","Object","assessments","Array","i","number","type","push","splice","reverse","Templates","renderForPromise","setStorageValue","error"],"mappings":";;;;;;;;mLA8BqBA,kBAAkBC,oCASvBC,OAAQC,kBACT,IAAIH,UAAU,CACjBI,QAASC,SAASC,eAAeJ,QACjCK,UAAU,0CACVJ,UAAAA,YAORK,cAESC,eAAiB,IAAIC,mFAUbC,OAGRC,KAAKC,2BACAD,KAAKE,oBAAoBH,OASvCE,0BAEUE,MAAQH,KAAKL,SAASS,wCACxBD,MAAME,OAAQF,MAAMG,yBACVC,YAAYP,KAAKR,QAASW,MAAME,KAAMF,MAAMG,SACjDT,eAAeW,WACb,6BAUWT,aAGhBU,KADWT,KAAKL,SAASe,cACTC,OAAOZ,OACvBa,sBAAwBb,MAAMa,sBAG9BC,OAAS,CACX,CACIC,IAAK,eACLC,UAAW,kBAEf,CACID,IAAKF,sBAAsBI,sBAC3BD,UAAW,kBAEf,CACID,IAAKF,sBAAsBK,0BAC3BF,UAAW,wCAIRF,OAAQ,kBAAkBK,MAAK,SAAUC,SAChDV,KAAKW,UAAYD,QAAQ,GACzBV,KAAKY,aAAeF,QAAQ,GAC5BV,KAAKa,iBAAmBH,QAAQ,MAGpCV,KAAKc,eAAiBX,sBAAsBW,eAC5Cd,KAAKe,OAASZ,sBAAsBa,kBAGlB,KAAfhB,KAAKe,SACJf,KAAKe,OAASf,KAAKiB,SAASC,QAGhClB,KAAKmB,WAAa,IAAIC,OACtBpB,KAAKqB,YAAc,IAAIC,UAGnB,IAAIC,EAAIvB,KAAKiB,SAASC,OAAQ,EAAGK,GAAK,EAAGA,IACrCvB,KAAKiB,SAASM,GAAGC,QAAUxB,KAAKe,QAChCf,KAAKiB,SAASM,GAAGE,KAAO,aAErBtB,sBAAsBW,iBACrBd,KAAKqB,YAAYK,KAAK1B,KAAKiB,SAASM,IACpCvB,KAAKiB,SAASU,OAAOJ,EAAG,KAG5BvB,KAAKiB,SAASM,GAAGE,KAAO,SAGhCzB,KAAKqB,YAAYO,UAGjB5B,KAAKmB,WAAanB,KAAKiB,SAAS,GAChCjB,KAAKiB,SAASU,OAAO,EAAG,aAId/B,KAACA,KAADC,GAAOA,UAAYgC,mBAAUC,iBAC/B,+CACA9B,yBAEMF,YAAYP,KAAKR,QAASa,KAAMC,SACrCT,eAAeW,eAGfb,SAAS6C,8BAA+B,CAACnC,KAAAA,KAAMC,GAAAA,KACtD,MAAOmC,kBACA5C,eAAeW,QAAQiC,OACtBA"}