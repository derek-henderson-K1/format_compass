define("format_compass/local/assessments_wheels",["exports","format_compass/local/vendors/chart"],(function(_exports,_chart){var obj;
/**
   * Course index main component.
   *
   * @module     format_compass/local/assessments_wheels
   * @class      format_compass/local/assessments_wheels
   * @copyright  2024 KnowledgeOne
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_chart=(obj=_chart)&&obj.__esModule?obj:{default:obj};return _exports.default=class{static init(target,chartValues,chartColors,chartKeys,sectionId){const ctx=document.getElementById(target).getContext("2d");let chartsData=[],valuesArray=chartValues.split(","),keysArray=chartKeys.split(","),colorsArray=chartColors.split(","),colorActive=getComputedStyle(document.body).getPropertyValue("--weight_wheel_fg_colour"),colorInactive=getComputedStyle(document.body).getPropertyValue("--weight_wheel_bg_colour"),colorDisabled=getComputedStyle(document.body).getPropertyValue("--weight_wheel_disabled_colour");valuesArray.forEach(((item,i)=>{let section={};section.chartValue=valuesArray[i],section.chartKey=keysArray[i],"color_active"==colorsArray[i]?(section.chartColor=colorActive,colorsArray[i]=colorActive):"color_inactive"==colorsArray[i]?(section.chartColor=colorInactive,colorsArray[i]=colorInactive):colorsArray[i]!=colorActive&&colorsArray[i]!=colorInactive&&colorsArray[i]!=colorDisabled&&(section.chartColor=colorDisabled,colorsArray[i]=colorDisabled),chartsData.push(section)}));var chart=new _chart.default(ctx,{type:"doughnut",data:{datasets:[{data:valuesArray,backgroundColor:colorsArray,borderWidth:5}]},options:{cutout:"72%",elements:{arc:{borderWidth:3,borderRadius:10}},legend:{display:!1},events:[],animation:{duration:0}}});window["chartUpdateData"+sectionId]=function(updatedChartData,sectionlist){if(null!==updatedChartData){chartsData=JSON.parse(JSON.stringify(updatedChartData)),chartsData=chartsData.filter((item=>sectionlist.includes(item.chartKey)||"fill"===item.chartKey));let percentTotal=0;const keyMap=new Map;chartsData.forEach(((item,index)=>{keyMap.set(item.chartKey,index),"fill"!=item.chartKey&&(percentTotal+=parseInt(item.chartValue))})),chartsData.sort(((a,b)=>{if("fill"===a.chartKey)return 1;if("fill"===b.chartKey)return-1;return sectionlist.indexOf(a.chartKey)-sectionlist.indexOf(b.chartKey)})),chartsData.forEach((item=>{item.chartKey==sectionId&&(item.chartColor=colorActive)})),valuesArray=[],keysArray=[],colorsArray=[],chartsData.forEach((item=>{valuesArray.push(item.chartValue),keysArray.push(item.chartKey),colorsArray.push(item.chartColor)}))}else{chartsData=chartsData.filter((item=>sectionlist.includes(item.chartKey)||"fill"===item.chartKey));let percentTotal=0;const keyMap=new Map;chartsData.forEach(((item,index)=>{keyMap.set(item.chartKey,index),"fill"!=item.chartKey&&(percentTotal+=parseInt(item.chartValue))})),chartsData.sort(((a,b)=>{if("fill"===a.chartKey)return 1;if("fill"===b.chartKey)return-1;return sectionlist.indexOf(a.chartKey)-sectionlist.indexOf(b.chartKey)})),valuesArray=[],colorsArray=[],keysArray=[],chartsData.forEach((item=>{"fill"==item.chartKey&&percentTotal<100&&(item.chartValue=100-percentTotal),valuesArray.push(item.chartValue),keysArray.push(item.chartKey),colorsArray.push(item.chartColor)}))}chart.data.datasets[0].data=valuesArray,chart.data.datasets[0].backgroundColor=colorsArray,chart.update()}}},_exports.default}));

//# sourceMappingURL=assessments_wheels.min.js.map